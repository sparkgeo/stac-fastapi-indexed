x-minio-environment: &minio-environment
  MINIO_ROOT_USER: miniouser
  AWS_ACCESS_KEY_ID: miniouser
  MINIO_ROOT_PASSWORD: miniopassword
  AWS_SECRET_ACCESS_KEY: miniopassword

services:
  minio:
    image: minio/minio:RELEASE.2024-06-11T03-13-30Z
    command: server /data --console-address ":9001"
    environment:
      <<: *minio-environment
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      interval: 1s
      timeout: 1s
      retries: 3
      test: curl --fail http://localhost:9001

  minio-sample-loader:
    image: minio/mc:RELEASE.2024-06-12T14-34-03Z
    entrypoint: /bin/bash /entrypoint.sh
    environment:
      <<: *minio-environment
    volumes:
      - "./minio/mc/entrypoint.sh:/entrypoint.sh:ro"
      - "./data/STAC/sample/:/stac/sample:ro"
    depends_on:
      minio:
        condition: service_healthy
    command: mc cp --recursive /stac/sample minio/stac

  sample-indexer:
    build:
      dockerfile: docker/indexer/Dockerfile
      context: .
    image: sparkgeo/stac_indexer
    environment:
      <<: *minio-environment
      stac_index_index_output_dir: /output
      stac_index_s3_endpoint: http://minio:9000
      AWS_PROFILE: ${AWS_PROFILE:-not-set}
    volumes:
      - "~/.aws:/root/.aws:ro"
      - "indexer-output:/output:rw"
      - "./stac_index_common:/app/stac_index_common:rw"
      - "./stac_indexer:/app/stac_indexer:rw"
    working_dir: /app/stac_indexer/src
    command: "python -m stac_indexer.index s3://stac/sample/catalog.json"
    depends_on:
      minio-sample-loader:
        condition: service_completed_successfully

  minio-index-loader:
    image: minio/mc:RELEASE.2024-06-12T14-34-03Z
    entrypoint: /bin/bash /entrypoint.sh
    environment:
      <<: *minio-environment
    volumes:
      - "./minio/mc/entrypoint.sh:/entrypoint.sh:ro"
      - "indexer-output:/index:rw"
    depends_on:
      sample-indexer:
        condition: service_completed_successfully
    command: mc cp --recursive /index minio/index

  api:
    environment:
      <<: *minio-environment
      stac_api_indexed_parquet_index_source_url: s3://index/index/parquet
      stac_api_indexed_s3_endpoint: http://minio:9000
      AWS_PROFILE: ${AWS_PROFILE:-not-set}
    depends_on:
      minio-index-loader:
        condition: service_completed_successfully

volumes:
  indexer-output:
