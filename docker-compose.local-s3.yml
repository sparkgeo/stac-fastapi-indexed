x-minio-environment: &minio-environment
  MINIO_ROOT_USER: miniouser
  AWS_ACCESS_KEY_ID: miniouser
  MINIO_ROOT_PASSWORD: miniopassword
  AWS_SECRET_ACCESS_KEY: miniopassword

services:
  re-rooter:
    image: python:3.12-slim
    volumes:
      - "./data/STAC/re_root_stac.py:/re_root_stac.py:ro"
      - "./data/STAC/sample/data:/input:ro"
      - "re-rooted-stac:/output:rw"
    command: python -m re_root_stac /data/ s3://stac/sample/ --source_root /input --target_root /output

  minio:
    image: minio/minio:RELEASE.2024-06-11T03-13-30Z
    command: server /data --console-address ":9001" --quiet
    environment:
      <<: *minio-environment
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/9001' || exit 1
      interval: 1s
      timeout: 1s
      retries: 3

  minio-sample-loader:
    image: minio/mc:RELEASE.2024-06-12T14-34-03Z
    entrypoint: /bin/bash /entrypoint.sh
    environment:
      <<: *minio-environment
    volumes:
      - "./docker/minio/mc/entrypoint.sh:/entrypoint.sh:ro"
      - "re-rooted-stac:/stac/sample:ro"
    depends_on:
      minio:
        condition: service_healthy
      re-rooter:
        condition: service_completed_successfully
    command: mc cp --recursive /stac/sample minio/stac

  indexer:
    build:
      dockerfile: docker/indexer/Dockerfile
      context: .
    image: sparkgeo/stac_indexer
    environment:
      <<: *minio-environment
      stac_index_reader_s3_endpoint: http://minio:9000
      INDEX_ROOT_CATALOG_URI: s3://stac/sample/catalog.json
      INDEX_CONFIG_PATH: /index-config.json
      INDEX_PUBLISH_PATH: s3://index/index/
    volumes:
      - "./data/STAC/sample/index-config.json:/index-config.json:ro"
    depends_on:
      minio-sample-loader:
        condition: service_completed_successfully

  api:
    environment:
      <<: *minio-environment
      stac_api_indexed_index_manifest_uri: s3://index/index/manifest.json
      stac_index_reader_s3_endpoint: http://minio:9000
    depends_on:
      indexer:
        condition: service_completed_successfully

volumes:
  re-rooted-stac:
